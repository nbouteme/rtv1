#pragma once

#include "t_cmat4.hu"
#include "t_cmat3.hu"

__device__ __host__
inline t_cmat4 rotate(const t_cvec3 &u, float t)
{
	t_cmat3 q;
	t_cmat3 r;
	t_cmat3 i;

	i = t_cmat3(1.0f);
	q = {
		{0, -u.z, u.y},
		{u.z, 0, -u.x},
		{-u.y, u.x, 0}
	};
	r = i + (q * sinf(t) + (q * q * (1 - cosf(t))));
	return {
		{r.v[0][0], r.v[0][1], r.v[0][2], 0.0f},
		{r.v[1][0], r.v[1][1], r.v[1][2], 0.0f},
		{r.v[2][0], r.v[2][1], r.v[2][2], 0.0f},
		{0.0f, 0.0f, 0.0f, 1.0f}
	};
}

__device__ __host__
inline t_cvec3 rotate(const t_cvec3 &i, float t, const t_cvec3 &a)
{
	return rotate(a, t) * i;
}