#ifndef MAT3_H
#define MAT3_H

#include <cpu/math/mat4.h>

struct	s_3dmat_named
{
	struct	s_3dvec a;
	struct	s_3dvec b;
	struct	s_3dvec c;
};

struct	s_3dmat
{
	union
	{
		struct	s_3dmat_named n;
		struct	s_3dvec v[3];
	};
};

typedef union
{
	struct s_3dmat s;
	float v[3][3];
}				t_mat3;

t_mat3 mat3_transpose(t_mat3 m);
float mat3_det(t_mat3 m);
t_mat3 mat3_inverse(t_mat3 m);
t_mat3 mat3_topleft(t_mat4 m);
t_vec3 mat3_transform3(t_mat3 m, t_vec3 a);
t_mat3	mat3_add(t_mat3 a, t_mat3 b);
t_mat3	mat3_muls(t_mat3 a, float b);
t_mat3	mat3_mult(t_mat3 a, t_mat3 b);
t_mat3 mat3_ident();


#endif
